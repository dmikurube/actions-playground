name: Build and test
on: push
jobs:
  sqlserver:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v1
    - name: Start Docker for mssql-server
      run: docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=somepassword' -p 1433:1433 -d mcr.microsoft.com/mssql/server:2017-CU8-ubuntu
  db2:  # https://hub.docker.com/r/ibmcom/db2
    runs-on: ubuntu-latest
    #services:
    #  db2:
    #    # docker run -itd --name db2container -p 50000:50000 -e LICENSE=accept -e DB2INST1_PASSWORD=password -e DBNAME=testdb ibmcom/db2:11.5.0.0a
    #    image: docker://ibmcom/db2:11.5.0.0a
    #    options: --name "db2container" --health-cmd "su - db2inst1 -c \"db2 GET DBM CFG\"" --health-interval 20s --health-timeout 30s --health-retries 128
    #    ports:
    #    - "50000:50000"
    #    - "55000:55000"
    #    - "60006:60006"
    #    - "60007:60007"
    #    env:
    #      LICENSE: accept
    #      DB2INSTANCE: db2inst1
    #      DB2INST1_PASSWORD: password
    #      DBNAME: testdb
    #      SAMPLEDB: true
    steps:
    - uses: actions/checkout@v1
    - name: List Docker containers
      run: docker ps -a
    #- name: Show DB2 configs
    #  run: docker exec db2container su - db2inst1 -c "db2 \"GET DBM CFG\""
    - name: Set env
      run: echo ::set-env name=workspace::$GITHUB_WORKSPACE
    - name: Install ksh to run installDSDriver
      run: sudo apt-get install ksh
    - name: Show ip (1)
      run: ip -f inet -o addr show eth0
    - name: Show ip (2)
      run: ip addr show eth0
    - name: Show its own IP address (1)
      run: ip -f inet -o addr show eth0 | cut -d\  -f 7 | cut -d/  -f 1
    - name: Show its own IP address (2)
      run: ip addr show eth0 | grep -o 'inet [0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+' | grep -o [0-9].*
    - name: Make working directory
      run: mkdir "${{ env.workspace }}/clpplus"
    - name: Download clpplus
      # https://github.com/rickdesantis/docker-files/tree/e3bbc10080be9e31635223c23091526bc5d9eff6/clpplus
      run: curl "https://raw.githubusercontent.com/rickdesantis/docker-files/master/clpplus/ibm_data_server_driver_package_linuxx64_v10.5.tar.gz" -o "${{ env.workspace }}/clpplus/ibm_data_server_driver_package_linuxx64_v10.5.tar.gz"
    - name: Extract clpplus
      run: tar zxvf "${{ env.workspace }}/clpplus/ibm_data_server_driver_package_linuxx64_v10.5.tar.gz" -C "${{ env.workspace }}/clpplus"
    - name: Make installDSDriver runnable
      run: chmod +x installDSDriver
      working-directory: "${{ env.workspace }}/clpplus/dsdriver"
    - name: Run installDSDriver
      run: ./installDSDriver
      working-directory: "${{ env.workspace }}/clpplus/dsdriver"
    - name: Dump installDSDriver.log
      run: cat installDSDriver.log
      working-directory: "${{ env.workspace }}/clpplus/dsdriver"
    - name: List bin files
      run: ls bin/
      working-directory: "${{ env.workspace }}/clpplus/dsdriver"
    - name: Head clpplus
      run: head -n 100 "bin/clpplus"
      working-directory: "${{ env.workspace }}/clpplus/dsdriver"
  mysql:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        options: --health-cmd "mysqladmin ping -h localhost" --health-interval 20s --health-timeout 10s --health-retries 10
        ports:
        - "3306:3306"
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: mysql
          MYSQL_PASSWORD: password
    steps:
    - uses: actions/checkout@v1
    - name: Connect
      run: mysql -h 127.0.0.1 --port 3306 -umysql -ppassword -e "SHOW DATABASES;"
  postgresql:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:9.4
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
        - "5432:5432"
        env:
          POSTGRES_PASSWORD: postgres
    steps:
    - uses: actions/checkout@v1
    - name: Connect
      run: psql -h 127.0.0.1 -U postgres -d postgres -c "\l"
      env:
        PGPASSWORD: postgres
